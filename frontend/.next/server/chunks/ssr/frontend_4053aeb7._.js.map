{"version":3,"sources":["turbopack:///[project]/frontend/lib/api.ts","turbopack:///[project]/frontend/app/admin/contacts/page.tsx"],"sourcesContent":["const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api';\n\nexport async function fetchServices() {\n  const response = await fetch(`${API_URL}/services`);\n  if (!response.ok) throw new Error('Failed to fetch services');\n  return response.json();\n}\n\nexport async function fetchBlogs() {\n  const response = await fetch(`${API_URL}/blogs`);\n  if (!response.ok) throw new Error('Failed to fetch blogs');\n  return response.json();\n}\n\nexport async function fetchPackages() {\n  const response = await fetch(`${API_URL}/packages`);\n  if (!response.ok) throw new Error('Failed to fetch packages');\n  return response.json();\n}\n\nexport async function fetchOrders() {\n  const response = await fetch(`${API_URL}/orders`);\n  if (!response.ok) throw new Error('Failed to fetch orders');\n  return response.json();\n}\n\nexport async function fetchContacts() {\n  const response = await fetch(`${API_URL}/contacts`);\n  if (!response.ok) throw new Error('Failed to fetch contacts');\n  return response.json();\n}\n\nexport async function createService(data: any) {\n  const response = await fetch(`${API_URL}/services`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) throw new Error('Failed to create service');\n  return response.json();\n}\n\nexport async function updateService(id: number, data: any) {\n  const response = await fetch(`${API_URL}/services/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) throw new Error('Failed to update service');\n  return response.json();\n}\n\nexport async function deleteService(id: number) {\n  const response = await fetch(`${API_URL}/services/${id}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) throw new Error('Failed to delete service');\n}\n\nexport async function createBlog(data: any) {\n  const response = await fetch(`${API_URL}/blogs`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) throw new Error('Failed to create blog');\n  return response.json();\n}\n\nexport async function updateBlog(id: number, data: any) {\n  const response = await fetch(`${API_URL}/blogs/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) throw new Error('Failed to update blog');\n  return response.json();\n}\n\nexport async function deleteBlog(id: number) {\n  const response = await fetch(`${API_URL}/blogs/${id}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) throw new Error('Failed to delete blog');\n}\n\nexport async function createPackage(data: any) {\n  const response = await fetch(`${API_URL}/packages`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) throw new Error('Failed to create package');\n  return response.json();\n}\n\nexport async function updatePackage(id: number, data: any) {\n  const response = await fetch(`${API_URL}/packages/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) throw new Error('Failed to update package');\n  return response.json();\n}\n\nexport async function deletePackage(id: number) {\n  const response = await fetch(`${API_URL}/packages/${id}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) throw new Error('Failed to delete package');\n}\n","'use client';\n\nimport { useEffect, useState } from 'react';\nimport { fetchContacts } from '@/lib/api';\n\nexport default function ContactsAdmin() {\n  const [contacts, setContacts] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchContacts()\n      .then(setContacts)\n      .catch(console.error)\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (loading) return <div className=\"px-4\">Loading...</div>;\n\n  return (\n    <div className=\"px-4 sm:px-0\">\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">Contacts</h2>\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n        <ul className=\"divide-y divide-gray-200\">\n          {contacts.map((contact) => (\n            <li key={contact.id}>\n              <div className=\"px-4 py-4 sm:px-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-blue-600\">\n                      {contact.name} - {contact.email}\n                    </p>\n                    <p className=\"mt-2 text-sm text-gray-700\">{contact.message}</p>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}